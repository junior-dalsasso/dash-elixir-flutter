import 'package:flutter_app/generated/rpc_schema.pb.dart';

class EcuMetric {
  final String value;
  final String label;
  final String? unit;
  final bool canShowChart;
  final bool canShowList;

  const EcuMetric({
    required this.value,
    required this.label,
    this.unit,
    this.canShowChart = true,
    this.canShowList = true,
  });
}

const List<EcuMetric> ecuMetrics = [
  EcuMetric(value: "hodometer", label: "Hodômetro", unit: "km", canShowChart: false),
  EcuMetric(value: "hodometerConsumed", label: "Consumo total", unit: "L", canShowChart: false),
  EcuMetric(value: "hodometerFuelByDistance", label: "Consumo médio total", unit: "km/L", canShowChart: false),
  EcuMetric(value: "trip", label: "Viagem", unit: "km", canShowChart: false),
  EcuMetric(value: "tripConsumed", label: "Consumo viagem", unit: "L", canShowChart: false),
  EcuMetric(value: "tripFuelByDistance", label: "Consumo médio viagem", unit: "km/L", canShowChart: false),
  EcuMetric(value: "currentSpeed", label: "Velocidade atual", unit: "km/h", canShowChart: false),
  EcuMetric(value: "seconds", label: "Segundos ECU ligada", unit: "s"),
  EcuMetric(value: "pulseWidth1", label: "Tempo de Injeção (1)", unit: "ms"),
  EcuMetric(value: "pulseWidth2", label: "Tempo de Injeção (2)", unit: "ms"),
  EcuMetric(value: "rpm", label: "Rotação do Motor", unit: "RPM"),
  EcuMetric(value: "advance", label: "Avanco de Ignição", unit: "graus"),
  EcuMetric(value: "squirt", label: "Dados bicos", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "engine", label: "Dados motor", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "afrtgt1", label: "AFR1 Target", unit: ""),
  EcuMetric(value: "afrtgt2", label: "AFR2 Target", unit: ""),
  EcuMetric(value: "wbo2_en1", label: "", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "wbo2_en2", label: "", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "barometer", label: "Barometro", unit: "bar"),
  EcuMetric(value: "map", label: "Map do Motor", unit: "bar"),
  EcuMetric(value: "mat", label: "Temperatura do Ar", unit: "ºC"),
  EcuMetric(value: "coolant", label: "Temp Arrefecimento", unit: "ºC"),
  EcuMetric(value: "tps", label: "Posicao da TBI", unit: "%"),
  EcuMetric(value: "batteryVoltage", label: "Tensão de Bateria", unit: "v"),
  EcuMetric(value: "afr1", label: "AFR 1", unit: ""),
  EcuMetric(value: "afr2", label: "AFR 2", unit: ""),
  EcuMetric(value: "knock", label: "Entrada Controle de Tração", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "egoCorrection1", label: "Correção EGO 1", unit: "%"),
  EcuMetric(value: "egoCorrection2", label: "Correção EGO 2", unit: "%"),
  EcuMetric(value: "airCorrection", label: "Correção da Densidade do Ar", unit: "%"),
  EcuMetric(value: "warmupEnrich", label: "Enriquecimento de Aquecimento", unit: "%"),
  EcuMetric(value: "accelEnrich", label: "Aceleração Enriquecimento", unit: "%"),
  EcuMetric(value: "tpsfuelcut", label: "", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "baroCorrection", label: "Correção Barometrica", unit: "%"),
  EcuMetric(value: "gammaEnrich", label: "Total Correção", unit: "%"),
  EcuMetric(value: "veCurr1", label: "VE1", unit: "%"),
  EcuMetric(value: "veCurr2", label: "VE2", unit: "%"),
  EcuMetric(value: "iacstep", label: "Motor de Passos", unit: "passos"),
  EcuMetric(value: "coldAdvDeg", label: "Avanço Frio", unit: "graus"),
  EcuMetric(value: "tpsDot", label: "TPS Dot", unit: "%/sec"),
  EcuMetric(value: "mapDot", label: "MAP Dot", unit: "kPa/sec"),
  EcuMetric(value: "dwell", label: "Dwell", unit: "ms"),
  EcuMetric(value: "mafload", label: "Carregamento de MAF", unit: "kPa"),
  EcuMetric(value: "fuelload", label: "Carregamento de Combustível", unit: ""),
  EcuMetric(value: "fuelCorrection", label: "Correção Sensor Flex", unit: "%"),
  EcuMetric(value: "portStatus", label: "Port Status", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "knockRetard", label: "Retardo Controle Tração", unit: "graus", canShowChart: false, canShowList: false),
  EcuMetric(value: "eaeFuelCorr1", label: "Correção % alcool", unit: "%"),
  EcuMetric(value: "egoV", label: "Tensão ego1", unit: "v"),
  EcuMetric(value: "egoV2", label: "Tensão ego2", unit: "v"),
  EcuMetric(value: "status1", label: "Status 1", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "status2", label: "Status 2", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "status3", label: "Status 3", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "status4", label: "Status 4", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "looptime", label: "Mainloop Time", unit: "us", canShowChart: false, canShowList: false),
  EcuMetric(value: "status5", label: "Status 5", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "tpsADC", label: "TPS ADC", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "fuelload2", label: "2º Carregamento Comb", unit: ""),
  EcuMetric(value: "ignload", label: "Carregamento de Ignição", unit: ""),
  EcuMetric(value: "ignload2", label: "2º Carregamento Ignicao", unit: ""),
  EcuMetric(value: "synccnt", label: "Contagem perda rotação", unit: ""),
  EcuMetric(value: "timing_err", label: "Timing Pred Err", unit: "%", canShowChart: false, canShowList: false),
  EcuMetric(value: "deltaT", label: "Delta T", unit: ""),
  EcuMetric(value: "wallfuel1", label: "Fuel On The Walls 1", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "wallfuel2", label: "Fuel On The Walls 2", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "eaeFuelCorr2", label: "Correção combustível alcool 2", unit: "%"),
  EcuMetric(value: "boostduty", label: "Boost Duty", unit: "%"),
  EcuMetric(value: "syncreason", label: "Reação da perda de rotação", unit: ""),
  EcuMetric(value: "user0", label: "User Defined", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "inj_adv1", label: "Graus de Injecao (1)", unit: "graus"),
  EcuMetric(value: "inj_adv2", label: "Graus de Injecao (2)", unit: "graus"),
  EcuMetric(value: "pulseWidth3", label: "Tempo de Injeção (3)", unit: "ms"),
  EcuMetric(value: "pulseWidth4", label: "Tempo de Injeção (4)", unit: "ms"),
  EcuMetric(value: "vetrim1curr", label: "VE Bancada (1)", unit: "%"),
  EcuMetric(value: "vetrim2curr", label: "VE Bancada (2)", unit: "%"),
  EcuMetric(value: "vetrim3curr", label: "VE Bancada (3)", unit: "%"),
  EcuMetric(value: "vetrim4curr", label: "VE Bancada (4)", unit: "%"),
  EcuMetric(value: "maf", label: "Massa de Ar", unit: "g/sec"),
  EcuMetric(value: "eaeload1", label: "Carregamento EAE", unit: ""),
  EcuMetric(value: "afrload1", label: "Carregamento de Ar/Combustível", unit: ""),
  EcuMetric(value: "rpmDot", label: "RPM Dot", unit: "rpm/sec"),
  EcuMetric(value: "gpioport0", label: "GPIO Port 0", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "gpioport1", label: "GPIO Port 1", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "gpioport2", label: "GPIO Port 2", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "cl_idle_targ_rpm", label: "CL Idle Target", unit: "RPM"),
  EcuMetric(value: "maf_volts", label: "Tensão do MAF", unit: "V"),
  EcuMetric(value: "airtemp", label: "Temperatura Instantânea do Ar", unit: "ºC"),
  EcuMetric(value: "dwell_trl", label: "Dwell (A Direita)", unit: "ms"),
  EcuMetric(value: "fuel_pct", label: "Porcentagem de Etanol", unit: "%"),
  EcuMetric(value: "boost_targ", label: "Boost Target", unit: "kPa"),
  EcuMetric(value: "ext_advance", label: "Avanço Externo", unit: "graus"),
  EcuMetric(value: "base_advance", label: "Base Spark Advance", unit: "graus"),
  EcuMetric(value: "idle_cor_advance", label: "Correção na lenta", unit: "graus"),
  EcuMetric(value: "mat_retard", label: "MAT Retard", unit: "graus"),
  EcuMetric(value: "flex_advance", label: "Avanço flex", unit: "graus"),
  EcuMetric(value: "adv1", label: "Tabela de Ignicao (1)", unit: "graus"),
  EcuMetric(value: "adv2", label: "Tabela de Ignicao (2)", unit: "graus"),
  EcuMetric(value: "adv3", label: "Tabela de Ignicao (3)", unit: "graus"),
  EcuMetric(value: "revlim_retard", label: "Revlim Retard", unit: "graus"),
  EcuMetric(value: "nitrous_retard", label: "Nitrous Retard", unit: "graus"),
  EcuMetric(value: "deadtime1", label: "DeadTime (1)", unit: "ms"),
  EcuMetric(value: "n2o_addfuel", label: "Combustivel Nitroso Adicionado", unit: "ms"),
  EcuMetric(value: "portbde", label: "Port BDE", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "portam", label: "Port AM", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "portt", label: "Port T", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "can_error_cnt", label: "CAN error count", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "can_error", label: "CAN error bits", unit: "", canShowChart: false, canShowList: false),
  EcuMetric(value: "oil", label: "Pressão de Óleo", unit: "bar"),
  EcuMetric(value: "fuel", label: "Pressão de Combustível", unit: "bar"),
  EcuMetric(value: "runsecs", label: "Run Seconds", unit: ""),
  EcuMetric(value: "start_retard", label: "Start Retard", unit: ""),
  EcuMetric(value: "connected", label: "Connected", unit: ""),
  // EcuMetric(value: "gpioadc0", label: "GPIO ADC 0", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpioadc1", label: "GPIO ADC 1", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpioadc2", label: "GPIO ADC 2", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpioadc3", label: "GPIO ADC 3", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpioadc4", label: "GPIO ADC 4", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpioadc5", label: "GPIO ADC 5", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpioadc6", label: "GPIO ADC 6", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpioadc7", label: "GPIO ADC 7", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpiopwmin0", label: "GPIO PWM In 0", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpiopwmin1", label: "GPIO PWM In 1", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpiopwmin2", label: "GPIO PWM In 2", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "gpiopwmin3", label: "GPIO PWM In 3", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "adc6", label: "ADC 6", unit: "", canShowChart: false, canShowList: false),
  // EcuMetric(value: "adc7", label: "ADC 7", unit: "", canShowChart: false, canShowList: false),
];

Map<String, dynamic> streamDataFlatmap(StreamData streamData) {
  return {
    "seconds": streamData.ecuData.seconds,
    "pulseWidth1": streamData.ecuData.pulseWidth1,
    "pulseWidth2": streamData.ecuData.pulseWidth2,
    "rpm": streamData.ecuData.rpm,
    "advance": streamData.ecuData.advance,
    "squirt": streamData.ecuData.squirt,
    "engine": streamData.ecuData.engine,
    "afrtgt1": streamData.ecuData.afrtgt1,
    "afrtgt2": streamData.ecuData.afrtgt2,
    "wbo2_en1": streamData.ecuData.wbo2En1,
    "wbo2_en2": streamData.ecuData.wbo2En1,
    "barometer": streamData.ecuData.barometer,
    "map": streamData.ecuData.map,
    "mat": streamData.ecuData.mat,
    "coolant": streamData.ecuData.coolant,
    "tps": streamData.ecuData.tps,
    "batteryVoltage": streamData.ecuData.batteryVoltage,
    "afr1": streamData.ecuData.afr1,
    "afr2": streamData.ecuData.afr2,
    "knock": streamData.ecuData.knock,
    "egoCorrection1": streamData.ecuData.egoCorrection1,
    "egoCorrection2": streamData.ecuData.egoCorrection2,
    "airCorrection": streamData.ecuData.airCorrection,
    "warmupEnrich": streamData.ecuData.warmupEnrich,
    "accelEnrich": streamData.ecuData.accelEnrich,
    "tpsfuelcut": streamData.ecuData.tpsfuelcut,
    "baroCorrection": streamData.ecuData.baroCorrection,
    "gammaEnrich": streamData.ecuData.gammaEnrich,
    "veCurr1": streamData.ecuData.veCurr1,
    "veCurr2": streamData.ecuData.veCurr2,
    "iacstep": streamData.ecuData.iacstep,
    "coldAdvDeg": streamData.ecuData.coldAdvDeg,
    "tpsDot": streamData.ecuData.tpsDot,
    "mapDot": streamData.ecuData.mapDot,
    "dwell": streamData.ecuData.dwell,
    "mafload": streamData.ecuData.mafload,
    "fuelload": streamData.ecuData.fuelload,
    "fuelCorrection": streamData.ecuData.fuelCorrection,
    "portStatus": streamData.ecuData.portStatus,
    "knockRetard": streamData.ecuData.knockRetard,
    "eaeFuelCorr1": streamData.ecuData.eaeFuelCorr1,
    "egoV": streamData.ecuData.egoV,
    "egoV2": streamData.ecuData.egoV2,
    "status1": streamData.ecuData.status1,
    "status2": streamData.ecuData.status2,
    "status3": streamData.ecuData.status3,
    "status4": streamData.ecuData.status4,
    "looptime": streamData.ecuData.looptime,
    "status5": streamData.ecuData.status5,
    "tpsADC": streamData.ecuData.tpsADC,
    "fuelload2": streamData.ecuData.fuelload2,
    "ignload": streamData.ecuData.ignload,
    "ignload2": streamData.ecuData.ignload2,
    "synccnt": streamData.ecuData.synccnt,
    "timing_err": streamData.ecuData.timingErr,
    "deltaT": streamData.ecuData.deltaT,
    "wallfuel1": streamData.ecuData.wallfuel1,
    "wallfuel2": streamData.ecuData.wallfuel2,
    "eaeFuelCorr2": streamData.ecuData.eaeFuelCorr2,
    "boostduty": streamData.ecuData.boostduty,
    "syncreason": streamData.ecuData.syncreason,
    "user0": streamData.ecuData.user0,
    "inj_adv1": streamData.ecuData.injAdv1,
    "inj_adv2": streamData.ecuData.injAdv2,
    "pulseWidth3": streamData.ecuData.pulseWidth3,
    "pulseWidth4": streamData.ecuData.pulseWidth4,
    "vetrim1curr": streamData.ecuData.vetrim1curr,
    "vetrim2curr": streamData.ecuData.vetrim2curr,
    "vetrim3curr": streamData.ecuData.vetrim3curr,
    "vetrim4curr": streamData.ecuData.vetrim4curr,
    "maf": streamData.ecuData.maf,
    "eaeload1": streamData.ecuData.eaeload1,
    "afrload1": streamData.ecuData.afrload1,
    "rpmDot": streamData.ecuData.rpmDot,
    "gpioport0": streamData.ecuData.gpioport0,
    "gpioport1": streamData.ecuData.gpioport1,
    "gpioport2": streamData.ecuData.gpioport2,
    "cl_idle_targ_rpm": streamData.ecuData.clIdleTargRpm,
    "maf_volts": streamData.ecuData.mafVolts,
    "airtemp": streamData.ecuData.airtemp,
    "dwell_trl": streamData.ecuData.dwellTrl,
    "fuel_pct": streamData.ecuData.fuelPct,
    "boost_targ": streamData.ecuData.boostTarg,
    "ext_advance": streamData.ecuData.extAdvance,
    "base_advance": streamData.ecuData.baseAdvance,
    "idle_cor_advance": streamData.ecuData.idleCorAdvance,
    "mat_retard": streamData.ecuData.matRetard,
    "flex_advance": streamData.ecuData.flexAdvance,
    "adv1": streamData.ecuData.adv1,
    "adv2": streamData.ecuData.adv2,
    "adv3": streamData.ecuData.adv3,
    "revlim_retard": streamData.ecuData.revlimRetard,
    "nitrous_retard": streamData.ecuData.nitrousRetard,
    "deadtime1": streamData.ecuData.deadtime1,
    "n2o_addfuel": streamData.ecuData.n2oAddfuel,
    "portbde": streamData.ecuData.portbde,
    "portam": streamData.ecuData.portam,
    "portt": streamData.ecuData.portt,
    "can_error_cnt": streamData.ecuData.canErrorCnt,
    "can_error": streamData.ecuData.canError,
    "oil": streamData.ecuData.oil,
    "fuel": streamData.ecuData.fuel,
    "runsecs": streamData.ecuData.runsecs,
    "start_retard": streamData.ecuData.startRetard,
    "connected": streamData.ecuData.connected,
    "hodometer": streamData.consumptionData.hodometer,
    "hodometerConsumed": streamData.consumptionData.hodometerConsumed,
    "hodometerFuelByDistance": streamData.consumptionData.hodometerFuelByDistance,
    "trip": streamData.consumptionData.trip,
    "tripConsumed": streamData.consumptionData.tripConsumed,
    "tripFuelByDistance": streamData.consumptionData.tripFuelByDistance,
    "currentSpeed": streamData.consumptionData.currentSpeed,
    // "gpioadc0": streamData.ecuData.gpioadc0,
    // "gpioadc1": streamData.ecuData.gpioadc1,
    // "gpioadc2": streamData.ecuData.gpioadc2,
    // "gpioadc3": streamData.ecuData.gpioadc3,
    // "gpioadc4": streamData.ecuData.gpioadc4,
    // "gpioadc5": streamData.ecuData.gpioadc5,
    // "gpioadc6": streamData.ecuData.gpioadc6,
    // "gpioadc7": streamData.ecuData.gpioadc7,
    // "gpiopwmin0": streamData.ecuData.gpiopwmin0,
    // "gpiopwmin1": streamData.ecuData.gpiopwmin1,
    // "gpiopwmin2": streamData.ecuData.gpiopwmin2,
    // "gpiopwmin3": streamData.ecuData.gpiopwmin3,
    // "adc6": streamData.ecuData.adc6,
    // "adc7": streamData.ecuData.adc7,
  };
}
